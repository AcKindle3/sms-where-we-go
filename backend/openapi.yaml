openapi: 3.0.0
info:
  version: 1.0.0
  title: SMS Where We Go API
  description: The official API for the SMS Where We Go project.

servers:
  - url: http://localhost:8080/v1

components:
  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    NotFound:
      description: Fail to find the specified resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    UnAuthorized:
      description: Unauthorized to access the resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    Forbidden:
      description: The user is not allowed to access the resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    Default:
      description: Default response telling whether the request is successful
      content:
        application/json:
          schema:
            $ref:  "#/components/schemas/Result"
  schemas:
    Result:
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: string
          enum: [success, error]
        message:
          type: string
    Student:
      type: object
      properties:
        name:
          type: string
          description: The name of the student
          maxLength: 30
          example: Noel Li
        class_number:
          type: integer
          description: The class number of the student at high school
          minimum: 1
          maximum: 100
          example: 2
        grad_year:
          type: integer
          description: The year when the student graduates from high school
          format: year
          example: 2021
        curriculum:
          type: string
          description: The curriculum of the student at high school
          example: gaokao
        phone_number:
          type: string
          pattern: ^1(?:3\d{3}|5[^4\D]\d{2}|8\d{3}|7(?:[0-35-9]\d{2}|4(?:0\d|1[0-2]|9\d))|9[0-35-9]\d{2}|6[2567]\d{2}|4(?:(?:10|4[01])\d{3}|[68]\d{4}|[579]\d{2}))\d{6}$
          example: 13912345678
        email:
          type: string
          format: email
          example: dcwang@shenzhong.net
        wxid:
          type: string
          maxLength: 20
          example: asdasdfffggghhhjjj
        department:
          type: string
          maxLength: 40
          example: School of Engineering
        major:
          type: string
          maxLength: 40
          example: Accouting
        school_uid:
          type: integer
          example: 12
    StudentVerbose:
      type: object
      required:
        - uid
        - name
        - class_number
        - grad_year
      properties:
        uid:
          type: integer
          description: The unique identifier of the student
          example: 12
        name:
          type: string
          description: The name of the student
          maxLength: 30
          example: Noel Li
        class_number:
          type: integer
          description: The class number of the student at high school
          minimum: 1
          maximum: 100
          example: 2
        grad_year:
          type: integer
          description: The year when the student graduates from high school
          format: year
          example: 2021
    School:
      type: object
      required:
        - school_name
      properties:
        latitude:
          type: number
          example: 22.5514
        longitude:
          type: number
          example: 114.1216
        school_name:
          type: string
          example: The University
        school_country:
          type: string
          example: China
        school_state_province:
          type: string
          example: Guangdong
        city:
          type: string
          example: Shenzhen
    City:
      type: object
      required:
        - city_uid
        - city
        - country
      properties:
        city_uid:
          type: integer
          description: The unique identifier of the city
        city:
          type: string
          example: New York City
        state_province:
          type: string
          example: New York
        country:
          type: string
          example: United States
    Visibility:
      type: string
      description: >
        * `private`: Visible only to the student themself
        * `class`: Visible only to the students in the same class
        * `curriculum`: Visible only to the students within the same curriculum
        * `year`: Visible only to the students who graduate in the same year
        * `students`: Visible only to any registered users (including past and future students)
      enum:
        - private
        - class
        - curriculum
        - year
        - students
    Role:
      type: string
      description: >
        * `student` Limited write access to the user itself
        * `class` Write access to the students within a class
        * `curriculum` Write access to the student within a curriculum
        * `year` Write access to the students who graduate in the same year
        * `system` Write access to the all students including admin students
      enum:
        - student
        - class
        - curriculum
        - year
        - system
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: connect.sid
    bearerAuth:
      type: http
      scheme: bearer
security:
  - sessionAuth: []
  - bearerAuth: []
paths:
  /roster:
    get:
      operationId: getRoster
      description: Return a roster containing the students and schools information
      responses:
        "200":
          description: Sucessfully retrieved the roster
          content:
            application/json:
              schema:
                allOf:
                  - $ref:  "#/components/schemas/Result"
                  - type: object
                    required:
                      - students
                      - schools
                    properties:
                      schools:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/School"
                            - type: object
                              required:
                                - uid
                              properties:
                                uid:
                                  type: integer
                                  description: The unique identifier of the school
                                  example: 12
                                students:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "#/components/schemas/Student"
                                      - $ref: "#/components/schemas/StudentVerbose"
        "403":
          $ref: "#/components/responses/UnAuthorized"
  /login:
    post:
      operationId: login
      description: Handle a login request
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - password
                  properties:
                    password:
                      type: string
                      example: password123
                - oneOf:
                  - type: object
                    required:
                      - identifier
                    properties:
                      use_uid:
                        type: boolean
                        description: When set to true, the identifier will be used as the uid of the student
                        enum: [false]
                      identifier:
                        description: The identifier of the username, which can be the uid, phone number or email
                        oneOf:
                          - type: string
                            format: email
                            example: test@asd.com
                          - type: string
                            pattern: ^1(?:3\d{3}|5[^4\D]\d{2}|8\d{3}|7(?:[0-35-9]\d{2}|4(?:0\d|1[0-2]|9\d))|9[0-35-9]\d{2}|6[2567]\d{2}|4(?:(?:10|4[01])\d{3}|[68]\d{4}|[579]\d{2}))\d{6}$
                            example: 18912341234
                  - type: object
                    required:
                      - identifier
                    properties:
                      use_uid:
                        type: boolean
                        description: When set to true, the identifier will be used as the uid of the student
                        enum: [true]
                      identifier:
                        type: number
                        description: The identifier as a student uid
                        maximum: 2147483647
      responses:
        "200":
          description: Return whether the login is a success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
        "400":
          $ref: "#/components/responses/Default"
        default:
          $ref: "#/components/responses/Default"
  /student:
    get:
      operationId: getStudent
      description: Return the information of students. Result is scoped by visibility.
      parameters:
        - in: query
          name: name
          schema:
            type: string
            example: Steven King
        - in: query
          name: phone_number
          schema:
            type: string
            example: 13612341234
        - in: query
          name: curriculum
          schema:
            type: string
            example: international
        - in: query
          name: city
          schema:
            type: string
            example: Shenzhen
        - in: query
          name: school_state_province
          schema:
            type: string
            example: Guangdong
        - in: query
          name: school_country
          schema:
            type: string
            example: China
      responses:
        200:
          description: Return a list of students
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties:
                      students:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Student"
                            - $ref: "#/components/schemas/StudentVerbose"
        401:
          $ref: "#/components/responses/UnAuthorized" 
        403:
          $ref: "#/components/responses/Forbidden" 
    post:
      operationId: postStudent
      description: Add a new student (registration key is required for new users)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/Student"
              - type: object
                required:
                  - name
                  - password
                  - registration_key
                properties:
                  name:
                    type: string
                  password:
                    type: string
                    format: password
                    example: password123
                  curriculum:
                    enum: [null]
                  registration_key:
                    type: string
                    minLength: 8
                    maxLength: 8
                    description: The registration key provided by the maintainer for each class which fills class_number, year, and curriculum for the student
                    example: asdfghjk
              - oneOf:
                - type: object
                  description: Only required for new users
                  required:
                    - registration_key
                  properties:
                    registration_key:
                      type: string
                      description: The registration key provided by the maintainer for each class which fills class_number, year, and curriculum for the student
                      example: asdfghjk
                    # To be added
                    #verification_code:
                    #  description: If the phone number is specified, the verification code will be required
                    #  type: integer
                    #  example: 32874
                - type: object
                  description: Only accessible to admin users
                  required:
                    - class_number
                    - grad_year
                  properties:
                    class_number:
                      type: integer
                      example: 4
                    grad_year:
                      type: integer
                      example: 2019
      responses:
        200:
          $ref: "#/components/responses/Default"
        400:
          $ref: "#/components/responses/Default"
        401:
          $ref: "#/components/responses/UnAuthorized"
        403:
          $ref: "#/components/responses/Forbidden"
    put:
      operationId: updateStudent
      description: Update the information of a student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/Student"
              - type: object
                properties:
                  student_uid:
                    description: If not specified, update the current logged in student
                    type: integer
                    maximum: 2147483647
                    example: 3
                  visibility:
                    $ref: "#/components/schemas/Visibility"
                  role:
                    $ref: "#/components/schemas/Role"
                  password:
                    description: The new password
                    type: string
                    format: password
                    example: pasword123
                  class_number:
                    type: integer
                    example: 18
                  grad_year:
                    type: integer
                    example: 2021
                  curriculum:
                    enum: [null]
                  # To be added  
                  #verification_code:
                  #  description: If the phone number is specified, the verification code will be required
                  #  type: integer
                  #  example: 32874
      responses:
        200:
          $ref: "#/components/responses/Default"
        400:
          $ref: "#/components/responses/Default"
        401:
          $ref: "#/components/responses/UnAuthorized"
        403:
          $ref: "#/components/responses/Forbidden"
    delete:
      operationId: deleteStudent
      description: Delete a student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - student_uid
              properties:
                student_uid:
                  type: integer
                  description: The unique identifier of the student
                  maximum: 2147483647
                  example: 21
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/UnAuthorized"
        403:
          $ref: "#/components/responses/Forbidden"
  /validate:
    post:
      operationId: validate
      description: Validate whether the provided registration key is valid and return corresponding information
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - registration_key
              properties:
                registration_key:
                  type: string
                  minLength: 8
                  maxLength: 8
                  example: asdfghjk
      responses:
        200:
          description: Tell whether the key is valid and return the related information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties:
                      class_number:
                        type: integer
                        example: 12
                      grad_year:
                        type: integer
                        example: 2021
                      curriculum:
                        type: string
                        example: international
                      expiration_date:
                        type: string
                        format: date
  /school:
    get:
      operationId: getSchool
      description: Search for schools
      security: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 0
            minimum: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
            example: 100
            minimum: 1
            maximum: 100
        - in: query
          name: school_name
          schema:
            type: string
            example: The University
        - in: query
          name: school_country
          schema:
            type: string
            example: China
        - in: query
          name: school_state_province
          schema:
            type: string
            example: Guangdong
        - in: query
          name: city
          schema:
            type: string
            example: Shenzhen
      responses:
        200:
          description: Return the schools that satisfy the constraints
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties:
                      schools:
                        type: array
                        items:
                          allOf:
                          - $ref: "#/components/schemas/School"
                          - type: object
                            required:
                              - uid
                            properties:
                              uid:
                                type: integer
                                description: The unique identifier of the school
                                example: 12
                              matched_alias:
                                type: string
                                description: The alias that matches the queried school_name
    post:
      operationId: postSchool
      description: Add a new school
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/School"
                - type: object
                  properties:
                    city_uid:
                      type: integer
                      example: 121
                      description: The uid of the city
      responses:
        200:
          description: Successfully added the school and return the id
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties: 
                      school_uid:
                        type: integer
                        example: 21
        400:
          $ref: "#/components/responses/Default"
  /role:
    get:
      operationId: getRole
      description: Get the role of the logged in student
      responses:
        200:
          description: Successfully fetched the role
          content:
            application/json:
              schema:
                allOf:
                  - $ref:  "#/components/schemas/Result"
                  - type: object
                    properties:
                      role:
                        type: string
                        example: student
                      level:
                        type: integer
                        description: The privilege level of the student, the higher the greater
                        example: 0
                      description:
                        type: string
                        example: Limited write access to the user itself
        401:
          $ref:  "#/components/responses/UnAuthorized"
  /city:
    get:
      operationId: getCity
      description: Get existing cities that match the query params
      security: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 0
            minimum: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
            example: 100
            minimum: 1
            maximum: 100
        - in: query
          name: city
          schema:
            type: string
            example: New York City
        - in: query
          name: state_province
          schema:
            type: string
            example: New York
        - in: query
          name: country
          schema:
            type: string
            example: United States
      responses:
        200:
          description: Return a list of cities that match the query params
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties:
                      cities:
                        type: array
                        items:
                          $ref: "#/components/schemas/City"
