openapi: 3.0.0
info:
  version: 1.0.0
  title: SMS Where We Go API
  description: The official API for the SMS Where We Go project.

servers:
  - url: http://localhost:8080/v1

components:
  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    NotFound:
      description: Fail to find the specified resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    UnAuthorized:
      description: Unauthorized to access the resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    Forbidden:
      description: The user is not allowed to access the resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Result"
    Default:
      description: Default response telling whether the request is successful
      content:
        application/json:
          schema:
            $ref:  "#/components/schemas/Result"
  schemas:
    Result:
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: string
          enum: [success, error]
        message:
          type: string
    Student:
      type: object
      properties:
        name:
          type: string
          description: The name of the student
          maxLength: 30
        class_number:
          type: integer
          description: The class number of the student at high school
          minimum: 1
          maximum: 100
        grad_year:
          type: integer
          description: The year when the student graduates from high school
          format: year
        curriculum:
          type: string
          description: The curriculum of the student at high school
        phone_number:
          type: string
          pattern: ^1(?:3\d{3}|5[^4\D]\d{2}|8\d{3}|7(?:[0-35-9]\d{2}|4(?:0\d|1[0-2]|9\d))|9[0-35-9]\d{2}|6[2567]\d{2}|4(?:(?:10|4[01])\d{3}|[68]\d{4}|[579]\d{2}))\d{6}$
        email:
          type: string
          format: email
        wxid:
          type: string
          maxLength: 20
        department:
          type: string
          maxLength: 40
        major:
          type: string
          maxLength: 40
        school_uid:
          type: integer
        registration_key:
          type: string
          minLength: 8
          maxLength: 8
          description: The registration key provided by the maintainer for each class which fills class_number, year, and curriculum for the student
    School:
      type: object
      required:
        - uid
        - school_name
      properties:
        uid:
          type: integer
          description: The unique identifier of the school
        latitude:
          type: string
        longitude:
          type: string
        school_name:
          type: string
        school_country:
          type: string
        school_state_province:
          type: string
        city:
          type: string
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: connect.sid
security:
  - sessionAuth: []
paths:
  /roster:
    get:
      operationId: getRoster
      description: Return a roster containing the students and schools information
      responses:
        "200":
          description: Sucessfully retrieve the roster
          content:
            application/json:
              schema:
                allOf:
                  - $ref:  "#/components/schemas/Result"
                  - type: object
                    required:
                      - students
                      - schools
                    properties:
                      students:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Student"
                            - type: object
                              required:
                                - uid
                                - name
                                - class_number
                                - grad_year
                              properties:
                                uid:
                                  type: integer
                                  description: The unique identifier of the student
                      schools:
                        type: array
                        items:
                          $ref: "#/components/schemas/School"
        "403":
          $ref: "#/components/responses/UnAuthorized"
        default:
          $ref: "#/components/responses/Default"
  /login:
    post:
      operationId: login
      description: Handle a login request
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - password
              properties:
                identifier:
                  type: string
                  description: The identifier of the username, which can be the uid, phone number or email
                password:
                  type: string
      responses:
        "200":
          description: Return whether the login is a success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
        default:
          $ref: "#/components/responses/Default"
  /student:
    get:
      operationId: getStudent
      description: Return the information of students. Result is scoped by visibility.
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: phone_number
          schema:
            type: string
        - in: query
          name: curriculum
          schema:
            type: string
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: school_state_province
          schema:
            type: string
        - in: query
          name: school_country
          schema:
            type: string
      responses:
        200:
          description: Return a list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Student"
                    - type: object
                      required:
                        - uid
                        - name
                        - class_number
                        - grad_year
                      properties:
                        uid:
                          type: integer
                          description: The unique identifier of the student
        401:
          $ref: "#/components/responses/UnAuthorized" 
        403:
          $ref: "#/components/responses/Forbidden" 
    post:
      operationId: postStudent
      description: Add a new student (registration key is required for new users)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/Student"
              - type: object
                required:
                  - password
                properties:
                  password:
                    type: string
                    format: password
              - oneOf:
                - type: object
                  description: Only required for new users
                  required:
                    - registration_key
                  properties:
                    registration_key:
                      type: string
                      description: The registration key provided by the maintainer for each class which fills class_number, year, and curriculum for the student
                - type: object
                  description: Only accessible to admin users
                  required:
                    - class_number
                    - grad_year
                  properties:
                    class_number:
                      type: integer
                    grad_year:
                      type: integer
      responses:
        200:
          $ref: "#/components/responses/Default"
        401:
          $ref: "#/components/responses/UnAuthorized"
        403:
          $ref: "#/components/responses/Forbidden"
    put:
      operationId: updateStudent
      description: Update the information of a student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: "#/components/schemas/Student"
              - type: object
                properties:
                  class_number:
                    type: integer
                  grad_year:
                    type: integer
      responses:
        200:
          $ref: "#/components/responses/Default"
        401:
          $ref: "#/components/responses/UnAuthorized"
        403:
          $ref: "#/components/responses/Forbidden"
    delete:
      operationId: deleteStudent
      description: Delete a student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - student_uid
              properties:
                student_uid:
                  type: integer
                  description: The unique identifier of the student
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/UnAuthorized"
        403:
          $ref: "#/components/responses/Forbidden"
  /validate:
    post:
      operationId: validate
      description: Validate whether the provided registration key is valid and return corresponding information
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - registration_key
              properties:
                registration_key:
                  type: string
      responses:
        200:
          description: Tell whether the key is valid and return the related information
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties:
                      class_number:
                        type: integer
                      year:
                        type: string
                      curriculum:
                        type: string
                      expiration_date:
                        type: string
                        format: date
        default:
          $ref: "#/components/responses/Default"
  /school:
    get:
      operationId: getSchool
      description: Search for schools
      security: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                school_name:
                  type: string
                school_country:
                  type: string
                school_state_province:
                  type: string
                city:
                  type: string
                limit:
                  type: integer
                  default: 100
      responses:
        200:
          description: Return the schools that satisfy the constraints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/School"
    post:
      operationId: postSchool
      description: Add a new school
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/School"
      responses:
        200:
          description: Successfully added the school and return the id
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/Result"
                  - type: object
                    properties: 
                      school_uid:
                        type: integer
        400:
          $ref: "#/components/responses/Default"
